{"DefectWeakness":{"ClassType":"_INP","Cause":{"Type":"Code","Name":"Erroneous Code","Comment":"in \u0027validate_path_is_safe(path)\u0027"},"Operation":{"Name":"Validate","Comment":"absolute path with \u0027/\u0027"},"Consequence":{"Type":"Injection","Name":"File Injection","Comment":"(absolute path traversal)"},"WeaknessAttributes":{"OperationAttribute":{},"OperandAttribute":[{}]},"Language":"Python","File":"/mlflow/server/handlers.py","Trace":"validate_path_is_safe():524\r\nfile_path = os.path.abspath(): 463","Line":"532-533","Class":"DVL"},"Weakness":[],"Failure":{"ClassType":"_FLR","Cause":{"Type":"Injection","Name":"File Injection","Comment":null},"Failure":[{"FailureAttributes":null,"Class":"IEX"},{"FailureAttributes":null,"Class":"DOS"},{"FailureAttributes":null,"Class":"TPR"}]},"ID":"CVE-2023-3765","Title":"File Injection (absolute path traversal) in GitHub MLflow before v2.5.0","Description":"Erroneous validation (does not check for absolute path format with \u0027/\u0027, e.g. C:/ or C:/temp/poc.txt) in validate_path_is_safe() leads to file injection -- absolute path traversal. If exploited, this can lead to information exposure, data tempering, or denial of service -- confidentiality, integrity, and availability loss, correspondingly.\r\n\r\n//generated//\r\nErroneous Code in \u0027validate_path_is_safe()\u0027 to Format Validate absolute path with \u0027/\u0027 in Codebase /mlflow/server/handlers.py: 532-533 leads to File Injection (absolute path traversal)\r\n\r\n. If exploited this can lead to IEX or DOS or TPR.","Author":"Eduard Pinconschi, Irena Bojanova","Date":"2023-09-11T16:45:59","Score":"10.0","Criteria":"lfprojects:mlflow","BugReport":"https://huntr.dev/bounties/4be5fd63-8a0a-490d-9ee1-f33dc768ed76/","CodeWithBug":"https://github.com/mlflow/mlflow/blob/master/mlflow/server/handlers.py","CodeWithFix":"https://github.com/mlflow/mlflow/commit/0f2ad0236e355b0816a06670eccf69f57551fa2d","CommitId":""}